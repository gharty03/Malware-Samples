
$('.loaderLoad').on('fileuploaded', function(event, data, previewId, index) {
	var loaded = $(this).attr('id').slice(-1);
	// upload file
	// get response data
    var form = data.form, files = data.files, extra = data.extra,
        response = data.response, reader = data.reader;

    var result = Object.keys(response).map(function(key) {
	  return [Number(key), response[key]];
	});
	var f = result[0][1];
	var result = Object.keys(f).map(function(key) {
	  return [Number(key), f[key]];
	});
	var f = result[0][1];
	var result = Object.keys(f).map(function(key) {
	  return [Number(key), f[key]];
	});

	var storedName = result[0][1]; 				// 0 fileName
	var file_type = result[1][1]; 				// 1 ext
	var filesize = result[2][1]; 				// 2 size
	var realName = result[3][1]; 				// 3 originalName
	var filehash = result[4][1]; 				// 4 hash
	var fileid = result[5][1]; 					// 5 id
	var fileuploaded = result[6][1];			// 6 uploaded
	var admin = result[7][1]; 					// 7 admin

	var double_id = result[8][1]; 				// 8 double_id
	var double_filename = result[9][1];			// 9 doublefilename
	var double_admin = result[10][1];			// 10 double admin
	var double_size = result[11][1];			// 11 double_size
	var double_originalname = result[12][1]; 	// 12 double_originalname
	var double_hash = result[13][1];			// 13 double_hash
	var double_uploaded = result[14][1];		// 14 double uploaded

	last_id = fileid;

	if(storedName==null){
		storedName = '';
	}
	
	switch(loaded){
		case '0':
			$('#groups-l86_source').val(storedName);
			$('#groups-l86_name').val(realName);
			break;
		case '1':
			$('#groups-l64_source').val(storedName);
			$('#groups-l64_name').val(realName);
			break;
		case '2':
			$('#groups-b86_source').val(storedName);
			$('#groups-b86_name').val(realName);
			break;
		case '3':
			$('#groups-b64_source').val(storedName);
			$('#groups-b64_name').val(realName);
			break;


		case '4':
			$('#groups-sl86_source').val(storedName);
			$('#groups-sl86_name').val(realName);
			break;
		case '5':
			$('#groups-sl64_source').val(storedName);
			$('#groups-sl64_name').val(realName);
			break;
		case '6':
			$('#groups-sb86_source').val(storedName);
			$('#groups-sb86_name').val(realName);
			break;
		case '7':
			$('#groups-sb64_source').val(storedName);
			$('#groups-sb64_name').val(realName);
			break;
	}

	// actions for md5 double
	if(double_originalname!=''){
		doublefiledialogue(double_id,double_filename,double_admin,double_size,double_originalname,double_hash,double_uploaded);
	}
	
	//$('#groups-field'+loaded).val(storedName);
	$('.kv-upload-progress').css('display','none');
});

function setprodfile(d,v,f,s,c){
	switch(d){
		case 10:
			$('#label_l86').text(f);
			$('#groups-l86_name').val(f);
			$('#groups-l86_source').val(s);
			$('#groups-l86_version').val(v);
			$('#groups-l86_created_at').val(c);
			break;
		case 11:
			$('#label_l64').text(f);
			$('#groups-l64_name').val(f);
			$('#groups-l64_source').val(s);
			$('#groups-l64_version').val(v);
			$('#groups-l64_created_at').val(c);
			break;
		case 12:
			$('#label_b86').text(f);
			$('#groups-b86_name').val(f);
			$('#groups-b86_source').val(s);
			$('#groups-b86_version').val(v);
			$('#groups-b86_created_at').val(c);
			break;
		case 13:
			$('#label_b64').text(f);
			$('#groups-b64_name').val(f);
			$('#groups-b64_source').val(s);
			$('#groups-b64_version').val(v);
			$('#groups-b64_created_at').val(c);
			break;
	}
}

function setstagfile(d,v,f,s,c){
	switch(d){
		case 10:
			$('#label_sl86').text(f);
			$('#groups-sl86_name').val(f);
			$('#groups-sl86_source').val(s);
			//$('#groups-l86_version').val(v);
			//$('#groups-l86_created_at').val(c);
			break;
		case 11:
			$('#label_sl64').text(f);
			$('#groups-sl64_name').val(f);
			$('#groups-sl64_source').val(s);
			//$('#groups-l64_version').val(v);
			//$('#groups-l64_created_at').val(c);
			break;
		case 12:
			$('#label_sb86').text(f);
			$('#groups-sb86_name').val(f);
			$('#groups-sb86_source').val(s);
			//$('#groups-b86_version').val(v);
			//$('#groups-b86_created_at').val(c);
			break;
		case 13:
			$('#label_sb64').text(f);
			$('#groups-sb64_name').val(f);
			$('#groups-sb64_source').val(s);
			//$('#groups-b64_version').val(v);
			//$('#groups-b64_created_at').val(c);
			break;
	}
}

function doublefiledialogue(p0,p1,p2,p3,p4,p5,p6){
	$("#doublefilemodalmask").show();
	$("#doublefilemodal").show();
	var res = '';
	res += "<b>Name:</b>"+p4+"<br>";
	res += "<b>Size:</b>"+p3+"<br>";
	res += "<b>Uploaded:</b>"+p6+"<br>";
	res += "<b>By user: </b> "+p2+"<br>";
	res += "<b>Hash:</b>"+p5+"<br>";
	$("body #doublefileinfo").html(res);
}

$("#doublefilemodalcancel").click(function(){
	$("#doublefilemodalmask").hide();
	$("#doublefilemodal").hide();
	itemdelete(last_id);
});


$("#fastdeletemodalclose").click(function(){
	$("#doublefilemodalmask").hide();
	$("#doublefilemodal").hide();
	
});

$("#doublefilemodalok").click(function(){
	$("#doublefilemodalmask").hide();
	$("#doublefilemodal").hide();
});

function itemdelete(item){
	
	// delete file
	$.ajax({
	  method: "POST",
	  async: false,
	  url: "/files/delete?id="+item,
	});
}

/*$(".actual-checkbox").click(function(){
	var a = $(this).attr('id');
	a = 'groups-'+a.substr(a.length - 3)+'_source';
	b = $("#"+a).val();
	krajeeDialog.confirm('Are you sure to set this file as actual?', function(out){
        if(out) {
			if(b!=''){
				$.ajax({
				  method: "POST",
				  async: false,
				  url: "/groups/setfileactual?file="+b,
				});
				//$.pjax.reload({container: "#w5-pjax", timeout: false});
			}
		}
    });
    $("body").css("overflow","scroll");
})*/

/*$(".btn-go").click(function(){
	var i=0;
	$(".actual-check input[type=checkbox]:checked").each(function(){
		i++;
	});
	if(i<4){
		krajeeDialog.alert("Not all workfiles are actual!");
		$("body").css("overflow","scroll");
		return false;
	}
});*/

