<?php defined('SYSPATH') or die('No direct script access.');

class Task_Parser_Client extends Minion_Task{
    protected function _execute(array $params){
	    $clients = [
		    '2FB3B1E9D9D1BB2ECD469D1009B184A4',
		    '253FFC2CA9B9AC374D006AEB40F0484A',
		    '5A992C548020A805E811558AFDD5A147',
		    '8604DBBDF87A7D906701DEC6C951F252'
	    ];

	    foreach($clients as $c){
//		    $client = Model_Client::getClientInfo($c);
		    $id_list = file('/root/'.$c);
		    $query = $this->getQuery($id_list);

		    $fp = fopen('/root/'.$c.'.csv', 'w');
		    foreach($query as $item){
			    $tmp_array = array();
			    foreach($item as $key => $item2){
				    if($key != 'data'){
					    $tmp_array[] = $item2;
				    }else{
					    $data_string = '';
					    $data = json_decode($item2, true);
					    foreach($data as $k => $d){
						    $data_string .= $k.": ".$d."\n\r";
					    }
					    $tmp_array[] = $data_string;
				    }
			    }
			    fputcsv($fp, $tmp_array);
		    }

		    fclose($fp);
	    }
    }

	private function getQuery($id_list){
		$clientName = DB::expr("upper(lpad(to_hex(cid1), 16, '0') || lpad(to_hex(cid0), 16, '0')) AS client");
		return DB::select('l.id', $clientName, 'l.referrer', 'l.link', 'l.datetime', 'l.data')
			->from(['logpost', 'l'])
			->join(['clients', 't'])
			->on('l.client_id', '=', 't.id')
			->where('l.id', 'IN', $id_list)
			->execute()
			->as_array();
	}
}